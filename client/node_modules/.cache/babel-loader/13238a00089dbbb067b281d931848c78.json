{"ast":null,"code":"var _jsxFileName = \"/home/dgetachew/dawit/projects/practice/react-front-to-back/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v1 as uuid } from \"uuid\";\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      _id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      _id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-222',\n      type: 'personal'\n    }, {\n      _id: 3,\n      name: 'Dawit Getachew',\n      email: 'dawit.getachew@gmail.com',\n      phone: '333-333-333',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = _id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: _id\n    });\n  }; // Set Current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/home/dgetachew/dawit/projects/practice/react-front-to-back/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v1","uuid","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","_id","name","email","phone","type","current","state","dispatch","addContact","contact","id","payload","updateContact","deleteContact","setCurrent","clearCurrent","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { v1 as uuid } from \"uuid\";\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n\n    const initialState = {\n        contacts: [\n            {\n                _id: 1,\n                name: 'Jill Johnson',\n                email: 'jill@gmail.com',\n                phone: '111-111-1111',\n                type: 'personal'\n            },\n            {\n                _id: 2,\n                name: 'Sara Watson',\n                email: 'sara@gmail.com',\n                phone: '222-222-222',\n                type: 'personal'\n            },\n            {\n                _id: 3,\n                name: 'Dawit Getachew',\n                email: 'dawit.getachew@gmail.com',\n                phone: '333-333-333',\n                type: 'professional'\n            }\n        ],\n        current: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Add Contact\n    const addContact = contact => {\n        contact.id = uuid();\n        dispatch({ type: ADD_CONTACT, payload: contact });\n    };\n\n    // Update Contact\n    const updateContact = contact => {\n\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\n    };\n\n    // Delete Contact\n    const deleteContact = _id => {\n        dispatch({ type: DELETE_CONTACT, payload: _id });\n    };\n\n    // Set Current\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    };\n    // Clear Current\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    };\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent\n\n            }}\n        >\n            {props.children}\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}