{"ast":null,"code":"var _jsxFileName = \"/home/dgetachew/dawit/projects/practice/react-front-to-back/contact-keeper/client/src/components/contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    filtered\n  } = contactContext;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: filtered.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n      contact: contact\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contacts, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/home/dgetachew/dawit/projects/practice/react-front-to-back/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","ContactContext","ContactItem","Contacts","contactContext","filtered","map","contact","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,cAAc,GAAGJ,UAAU,CAACC,cAAD,CAAjC;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAeD,cAArB;AAEA,sBACI,QAAC,QAAD;AAAA,cACKC,QAAQ,CAACC,GAAT,CAAaC,OAAO,iBACjB,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA;AAAvC,OAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAZD;;GAAML,Q;;KAAAA,Q;AAcN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react'\nimport ContactContext from '../../context/contact/contactContext'\nimport ContactItem from './ContactItem';\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { filtered } = contactContext;\n\n    return (\n        <Fragment>\n            {filtered.map(contact => (\n                <ContactItem key={contact.id} contact={contact} />\n            ))}\n        </Fragment>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}